// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client.proto

#ifndef PROTOBUF_INCLUDED_client_2eproto
#define PROTOBUF_INCLUDED_client_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_client_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_client_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_client_2eproto();
namespace window {
class MoveMessage;
class MoveMessageDefaultTypeInternal;
extern MoveMessageDefaultTypeInternal _MoveMessage_default_instance_;
class ResponseMessage;
class ResponseMessageDefaultTypeInternal;
extern ResponseMessageDefaultTypeInternal _ResponseMessage_default_instance_;
}  // namespace window
namespace google {
namespace protobuf {
template<> ::window::MoveMessage* Arena::CreateMaybeMessage<::window::MoveMessage>(Arena*);
template<> ::window::ResponseMessage* Arena::CreateMaybeMessage<::window::ResponseMessage>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace window {

// ===================================================================

class ResponseMessage final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:window.ResponseMessage) */ {
 public:
  ResponseMessage();
  virtual ~ResponseMessage();

  ResponseMessage(const ResponseMessage& from);

  inline ResponseMessage& operator=(const ResponseMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResponseMessage(ResponseMessage&& from) noexcept
    : ResponseMessage() {
    *this = ::std::move(from);
  }

  inline ResponseMessage& operator=(ResponseMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ResponseMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResponseMessage* internal_default_instance() {
    return reinterpret_cast<const ResponseMessage*>(
               &_ResponseMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ResponseMessage* other);
  friend void swap(ResponseMessage& a, ResponseMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResponseMessage* New() const final {
    return CreateMaybeMessage<ResponseMessage>(nullptr);
  }

  ResponseMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ResponseMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ResponseMessage& from);
  void MergeFrom(const ResponseMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResponseMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string msg = 3;
  void clear_msg();
  static const int kMsgFieldNumber = 3;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // int32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // bool success = 2;
  void clear_success();
  static const int kSuccessFieldNumber = 2;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:window.ResponseMessage)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 result_;
  bool success_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_client_2eproto;
};
// -------------------------------------------------------------------

class MoveMessage final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:window.MoveMessage) */ {
 public:
  MoveMessage();
  virtual ~MoveMessage();

  MoveMessage(const MoveMessage& from);

  inline MoveMessage& operator=(const MoveMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MoveMessage(MoveMessage&& from) noexcept
    : MoveMessage() {
    *this = ::std::move(from);
  }

  inline MoveMessage& operator=(MoveMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const MoveMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MoveMessage* internal_default_instance() {
    return reinterpret_cast<const MoveMessage*>(
               &_MoveMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(MoveMessage* other);
  friend void swap(MoveMessage& a, MoveMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MoveMessage* New() const final {
    return CreateMaybeMessage<MoveMessage>(nullptr);
  }

  MoveMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MoveMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MoveMessage& from);
  void MergeFrom(const MoveMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MoveMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string msg = 7;
  void clear_msg();
  static const int kMsgFieldNumber = 7;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // int32 hwnd = 1;
  void clear_hwnd();
  static const int kHwndFieldNumber = 1;
  ::google::protobuf::int32 hwnd() const;
  void set_hwnd(::google::protobuf::int32 value);

  // int32 left = 2;
  void clear_left();
  static const int kLeftFieldNumber = 2;
  ::google::protobuf::int32 left() const;
  void set_left(::google::protobuf::int32 value);

  // int32 top = 3;
  void clear_top();
  static const int kTopFieldNumber = 3;
  ::google::protobuf::int32 top() const;
  void set_top(::google::protobuf::int32 value);

  // int32 width = 4;
  void clear_width();
  static const int kWidthFieldNumber = 4;
  ::google::protobuf::int32 width() const;
  void set_width(::google::protobuf::int32 value);

  // int32 height = 5;
  void clear_height();
  static const int kHeightFieldNumber = 5;
  ::google::protobuf::int32 height() const;
  void set_height(::google::protobuf::int32 value);

  // bool repaint = 6;
  void clear_repaint();
  static const int kRepaintFieldNumber = 6;
  bool repaint() const;
  void set_repaint(bool value);

  // @@protoc_insertion_point(class_scope:window.MoveMessage)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 hwnd_;
  ::google::protobuf::int32 left_;
  ::google::protobuf::int32 top_;
  ::google::protobuf::int32 width_;
  ::google::protobuf::int32 height_;
  bool repaint_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_client_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ResponseMessage

// int32 result = 1;
inline void ResponseMessage::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 ResponseMessage::result() const {
  // @@protoc_insertion_point(field_get:window.ResponseMessage.result)
  return result_;
}
inline void ResponseMessage::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:window.ResponseMessage.result)
}

// bool success = 2;
inline void ResponseMessage::clear_success() {
  success_ = false;
}
inline bool ResponseMessage::success() const {
  // @@protoc_insertion_point(field_get:window.ResponseMessage.success)
  return success_;
}
inline void ResponseMessage::set_success(bool value) {
  
  success_ = value;
  // @@protoc_insertion_point(field_set:window.ResponseMessage.success)
}

// string msg = 3;
inline void ResponseMessage::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResponseMessage::msg() const {
  // @@protoc_insertion_point(field_get:window.ResponseMessage.msg)
  return msg_.GetNoArena();
}
inline void ResponseMessage::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:window.ResponseMessage.msg)
}
#if LANG_CXX11
inline void ResponseMessage::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:window.ResponseMessage.msg)
}
#endif
inline void ResponseMessage::set_msg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:window.ResponseMessage.msg)
}
inline void ResponseMessage::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:window.ResponseMessage.msg)
}
inline ::std::string* ResponseMessage::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:window.ResponseMessage.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResponseMessage::release_msg() {
  // @@protoc_insertion_point(field_release:window.ResponseMessage.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResponseMessage::set_allocated_msg(::std::string* msg) {
  if (msg != nullptr) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:window.ResponseMessage.msg)
}

// -------------------------------------------------------------------

// MoveMessage

// int32 hwnd = 1;
inline void MoveMessage::clear_hwnd() {
  hwnd_ = 0;
}
inline ::google::protobuf::int32 MoveMessage::hwnd() const {
  // @@protoc_insertion_point(field_get:window.MoveMessage.hwnd)
  return hwnd_;
}
inline void MoveMessage::set_hwnd(::google::protobuf::int32 value) {
  
  hwnd_ = value;
  // @@protoc_insertion_point(field_set:window.MoveMessage.hwnd)
}

// int32 left = 2;
inline void MoveMessage::clear_left() {
  left_ = 0;
}
inline ::google::protobuf::int32 MoveMessage::left() const {
  // @@protoc_insertion_point(field_get:window.MoveMessage.left)
  return left_;
}
inline void MoveMessage::set_left(::google::protobuf::int32 value) {
  
  left_ = value;
  // @@protoc_insertion_point(field_set:window.MoveMessage.left)
}

// int32 top = 3;
inline void MoveMessage::clear_top() {
  top_ = 0;
}
inline ::google::protobuf::int32 MoveMessage::top() const {
  // @@protoc_insertion_point(field_get:window.MoveMessage.top)
  return top_;
}
inline void MoveMessage::set_top(::google::protobuf::int32 value) {
  
  top_ = value;
  // @@protoc_insertion_point(field_set:window.MoveMessage.top)
}

// int32 width = 4;
inline void MoveMessage::clear_width() {
  width_ = 0;
}
inline ::google::protobuf::int32 MoveMessage::width() const {
  // @@protoc_insertion_point(field_get:window.MoveMessage.width)
  return width_;
}
inline void MoveMessage::set_width(::google::protobuf::int32 value) {
  
  width_ = value;
  // @@protoc_insertion_point(field_set:window.MoveMessage.width)
}

// int32 height = 5;
inline void MoveMessage::clear_height() {
  height_ = 0;
}
inline ::google::protobuf::int32 MoveMessage::height() const {
  // @@protoc_insertion_point(field_get:window.MoveMessage.height)
  return height_;
}
inline void MoveMessage::set_height(::google::protobuf::int32 value) {
  
  height_ = value;
  // @@protoc_insertion_point(field_set:window.MoveMessage.height)
}

// bool repaint = 6;
inline void MoveMessage::clear_repaint() {
  repaint_ = false;
}
inline bool MoveMessage::repaint() const {
  // @@protoc_insertion_point(field_get:window.MoveMessage.repaint)
  return repaint_;
}
inline void MoveMessage::set_repaint(bool value) {
  
  repaint_ = value;
  // @@protoc_insertion_point(field_set:window.MoveMessage.repaint)
}

// string msg = 7;
inline void MoveMessage::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MoveMessage::msg() const {
  // @@protoc_insertion_point(field_get:window.MoveMessage.msg)
  return msg_.GetNoArena();
}
inline void MoveMessage::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:window.MoveMessage.msg)
}
#if LANG_CXX11
inline void MoveMessage::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:window.MoveMessage.msg)
}
#endif
inline void MoveMessage::set_msg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:window.MoveMessage.msg)
}
inline void MoveMessage::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:window.MoveMessage.msg)
}
inline ::std::string* MoveMessage::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:window.MoveMessage.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MoveMessage::release_msg() {
  // @@protoc_insertion_point(field_release:window.MoveMessage.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MoveMessage::set_allocated_msg(::std::string* msg) {
  if (msg != nullptr) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:window.MoveMessage.msg)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace window

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_client_2eproto
